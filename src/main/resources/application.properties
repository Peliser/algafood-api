# Database
spring.datasource.url=jdbc:mysql://${DB_HOST:localhost}/algafood?createDatabaseIfNotExist=true&serverTimezone=UTC&useSSL=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect

# Disable redis
spring.session.store-type=none

spring.jackson.deserialization.fail-on-unknown-properties=true
spring.jackson.deserialization.fail-on-ignored-properties=true

spring.mvc.throw-exception-if-no-handler-found=true
spring.resources.add-mappings=false

server.compression.enabled=true
#server.compression.min-response-size=10KB

spring.freemarker.settings.locale=pt_BR

#spring.security.user.name=algafood
#spring.security.user.password=123

#spring.security.oauth2.resourceserver.opaquetoken.introspection-uri=http://auth.algafood.local:8081/oauth/check_token
#spring.security.oauth2.resourceserver.opaquetoken.client-id=checktoken
#spring.security.oauth2.resourceserver.opaquetoken.client-secret=123

# Public key in a file in the project
#spring.security.oauth2.resourceserver.jwt.public-key-location=classpath:keys/algafood-pkey.pem

spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/.well-known/jwks.json

server.forward-headers-strategy=framework

# Loggly
#logging.loggly.token=TOKEN

#spring.servlet.multipart.max-file-size=20KB
#spring.servlet.multipart.max-request-size=20MB

#spring.jackson.property-naming-strategy=SNAKE_CASE

#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=update

# Generates the SQL to create all the database.
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/ddl.sql